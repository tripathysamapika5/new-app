{"version":3,"sources":["assets/logo.png","history.js","config.js","components/App.js","components/Transaction.js","components/Block.js","components/Blockchain.js","components/ConductTransaction.js","components/TransactionPool.js","index.js"],"names":["module","exports","createBrowserHistory","API_BASE_URL","App","useState","walletInfo","setWalletInfo","useEffect","fetch","then","response","json","address","balance","className","src","logo","alt","to","Transaction","transaction","input","output","recipients","Object","keys","map","recipient","key","ToggleTransactionDisplay","block","displayTransaction","setDisplayTransaction","data","toggleDisplayTransaction","id","Button","variant","size","onClick","Block","timestamp","hash","hashDisplay","substring","timestampDisplay","Date","toLocaleString","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","buttonNumber","i","push","number","ConductTransaction","amount","setAmount","setRecipient","knownAddresses","setKnownAddresses","FormGroup","FormControl","placeholder","value","onChange","event","target","Number","method","headers","body","JSON","stringify","console","log","alert","history","knownAddress","length","TransactionPool","transactions","setTransactions","fetchTransactions","intervalId","setInterval","clearInterval","ReactDOM","render","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.9ecab6f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ba20fc9a.png\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","const API_BASE_URL = 'http://localhost:5000';\nconst NANOSECONDS_PY = 1;\nconst MICROSECONDS_PY = 1000 * NANOSECONDS_PY;\nconst MILLISECONDS_PY = 1000 * MICROSECONDS_PY;\n\nconst MILLISECONDS_JS = 1;\nconst SECONDS_JS = MILLISECONDS_JS * 1000;\n\nexport { API_BASE_URL, MILLISECONDS_PY, SECONDS_JS };","import React,  {useState , useEffect } from 'react';\nimport logo from '../assets/logo.png';\nimport { API_BASE_URL } from '../config';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n\n  const [walletInfo, setWalletInfo] = useState({});\n\n    useEffect(() => {\n      fetch(`${API_BASE_URL}/wallet/info`)\n        .then(response => response.json())\n        .then(json => setWalletInfo(json));\n    },[]);\n\n  const {address, balance} = walletInfo;\n  \n\n  return (\n    <div className=\"App\">\n      <img className=\"logo\" src={logo} alt=\"Aplication logo\" />\n      <h3> Welcome to Pychain</h3>\n      <br/>\n      <Link to = \"/blockchain\">Blockchain</Link>\n      <Link to = \"/conduct-transaction\">Conduct a Transaction</Link>\n      <Link to = \"/transaction-pool\">Transaction Pool</Link>\n      <br/>\n\n      <div className = \"walletInfo\">\n        <div>Address : {address}</div>\n        <div>Balance : {balance}</div>\n      </div>\n     </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction Transaction({ transaction }) {\n    const {input, output} = transaction;\n    const recipients = Object.keys(output);\n\n    return (\n        <div className = \"Transaction\">\n            <div>from  : {input.address}</div>\n            {\n                recipients.map(recipient => (\n                    <div key ={recipient}>\n                        To : {recipient} | sent : {output[recipient]}\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Transaction;","import React, { useState } from 'react';\nimport { MILLISECONDS_PY } from '../config';\nimport Transaction from './Transaction';\nimport { Button } from 'react-bootstrap';\n\nfunction ToggleTransactionDisplay({ block }) {\n    const [displayTransaction, setDisplayTransaction] = useState(false);\n    const { data } = block;\n\n    const toggleDisplayTransaction = () => {\n        setDisplayTransaction(!displayTransaction);\n    }\n\n    if (displayTransaction) {\n        return (\n        <div>\n        {\n            data.map(transaction => (\n                <div key={transaction.id} >\n                    <hr/>\n                    <Transaction transaction={transaction}/>\n                </div>\n                ))\n        }\n        <br/>\n        <Button\n                variant = \"danger\"\n                size = \"sm\"\n                onClick = {toggleDisplayTransaction}\n            >\n            Show Less\n        </Button>\n\n        </div>\n        );\n    }\n    return (\n        <div>\n            <br/>\n            <Button\n                variant = \"danger\"\n                size = \"sm\"\n                onClick = {toggleDisplayTransaction}\n            >\n            Show more\n            </Button>\n\n        </div>\n    );\n\n\n}\n\nfunction Block({ block }) {\n    const { timestamp, hash, data } = block;\n    const hashDisplay  = `${hash.substring(0, 15)}...`;\n    const timestampDisplay = new Date(timestamp / MILLISECONDS_PY ).toLocaleString();\n\n    return (\n        <div className = \"Block\">\n            <div>Hash : {hashDisplay}</div>\n            <div>Timestamp : {timestampDisplay}</div>\n            <ToggleTransactionDisplay block = {block}/>\n        </div>\n    )\n}\n\nexport default Block;","import React, {useState, useEffect} from 'react';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nconst PAGE_RANGE = 3;\n\nfunction Blockchain(){\n    const [blockchain, setBlockchain] = useState([]);\n    const [blockchainLength, setBlockchainLength] = useState([]);\n\n    const fetchBlockchainPage = ({start, end}) => {\n        fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`)\n            .then(response => response.json())\n            .then(json => setBlockchain(json));\n    };\n\n    useEffect ( () => {\n        fetchBlockchainPage({start: 0, end: PAGE_RANGE});\n\n        fetch(`${API_BASE_URL}/blockchain/length`)\n            .then(response => response.json())\n            .then(json => setBlockchainLength(json));\n    },[]);\n\n    const buttonNumber = [];\n    for ( let i = 0 ; i < blockchainLength/PAGE_RANGE ; i++){\n        buttonNumber.push(i)\n    }\n\n    return (\n        <div className=\"Blockchain\">\n            <Link to = \"/\">Home</Link>\n            <hr/>\n            <h3>Blockchain</h3>\n            <div>\n                {\n                    blockchain.map(block => <Block key = {block.hash} block = {block} />)\n                } \n            </div>\n            <div>\n                {\n                buttonNumber.map(number => {\n                    const start = number * PAGE_RANGE;\n                    const end = start + PAGE_RANGE;\n                    return (\n                        <span key = {number}>\n                            <Button variant = \"danger\" size = \"sm\" onClick = {() => fetchBlockchainPage({start , end })} >\n                                {number+1}\n                            </Button>\n                            \n                        </span>\n                    )\n                })\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default Blockchain;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport history from '../history';\n\nfunction ConductTransaction() {\n  const [amount, setAmount] = useState(0);\n  const [recipient, setRecipient] = useState('');\n  const [knownAddresses, setKnownAddresses] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/known-addresses`)\n      .then(response => response.json())\n      .then(json => setKnownAddresses(json));\n  }, []);\n\n  const updateRecipient = event => {\n    setRecipient(event.target.value);\n  }\n\n  const updateAmount = event => {\n    setAmount(Number(event.target.value));\n  }\n\n  const submitTransaction = () => {\n    fetch(`${API_BASE_URL}/wallet/transact`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ recipient, amount })\n    }).then(response => response.json())\n      .then(json => {\n        console.log('submitTransaction json', json);\n\n        alert('Success!');\n\n        history.push('/transaction-pool');\n      });\n  }\n\n  return (\n    <div className=\"ConductTransaction\">\n      <Link to=\"/\">Home</Link>\n      <hr />\n      <h3>Conduct a Transaction</h3>\n      <br />\n      <FormGroup>\n        <FormControl\n          input=\"text\"\n          placeholder=\"recipient\"\n          value={recipient}\n          onChange={updateRecipient}\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormControl\n          input=\"number\"\n          placeholder=\"amount\"\n          value={amount}\n          onChange={updateAmount}\n        />\n      </FormGroup>\n      <div>\n        <Button\n          variant=\"danger\"\n          onClick={submitTransaction}\n        >\n          Submit\n        </Button>\n      </div>\n      <br />\n      <h4>Known Addresses</h4>\n      <div>\n        {\n          knownAddresses.map((knownAddress, i) => (\n            <span key={knownAddress}>\n              <u>{knownAddress}</u>{i !== knownAddresses.length - 1 ? ', ' : ''}\n            </span>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ConductTransaction;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Transaction from './Transaction';\nimport { API_BASE_URL, SECONDS_JS } from '../config';\nimport history from '../history';\n\nconst POLL_INTERVAL = 10 * SECONDS_JS;\n\nfunction TransactionPool() {\n  const [transactions, setTransactions] = useState([]);\n\n  const fetchTransactions = () => {\n    fetch(`${API_BASE_URL}/transactions`)\n      .then(response => response.json())\n      .then(json => {\n        console.log('transactions json', json);\n\n        setTransactions(json);\n      });\n  }\n\n  useEffect(() => {\n    fetchTransactions();\n\n    const intervalId = setInterval(fetchTransactions, POLL_INTERVAL);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const fetchMineBlock = () => {\n    fetch(`${API_BASE_URL}/blockchain/mine`)\n      .then(() => {\n        alert('Success!');\n\n        history.push('/blockchain');\n      });\n  }\n\n  return (\n    <div className=\"TransactionPool\">\n      <Link to=\"/\">Home</Link>\n      <hr />\n      <h3>Transaction Pool</h3>\n      <div>\n        {\n          transactions.map(transaction => (\n            <div key={transaction.id}>\n              <hr />\n              <Transaction transaction={transaction} />\n            </div>\n          ))\n        }\n      </div>\n      <hr />\n      <Button\n        variant=\"danger\"\n        onClick={fetchMineBlock}\n      >\n        Mine a block of these transactions\n      </Button>\n    </div>\n  )\n}\n\nexport default TransactionPool;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport history from './history';\nimport App from './components/App';\nimport Blockchain from './components/Blockchain';\nimport ConductTransaction from './components/ConductTransaction';\nimport TransactionPool from './components/TransactionPool';\n\nReactDOM.render(\n  <Router history={history}>\n    <Switch>\n      <Route path='/' exact component={App} />\n      <Route path='/blockchain' component={Blockchain} />\n      <Route path='/conduct-transaction' component={ConductTransaction} />\n      <Route path='/transaction-pool' component={TransactionPool} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}